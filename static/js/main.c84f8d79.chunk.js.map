{"version":3,"sources":["components/contact-form/ContactForm.module.css","components/contactItem/contactItem.module.css","components/contactList/listSlide.module.css","components/notify/Notify.module.css","components/contactList/listPop.module.css","transitions.module.css","components/notify/tr.module.css","redux/types.js","redux/actions.js","components/contactItem/ContactItem.js","components/contactItem/ContactItemContainer.js","components/contactList/ContactList.js","components/contactList/ContactListContainer.js","components/filter/Filter.js","components/contact-form/ContactForm.js","components/contact-form/ContactFormContainer.js","components/notify/Notify.js","components/App.js","components/AppContainer.js","redux/contactReducers.js","redux/store.js","index.js"],"names":["module","exports","deleteContact","createAction","Types","changeInputName","changeInputNumber","handleSubmit","changeInputFilter","showNotification","ContactItem","props","className","css","contactItem","el","name","number","contactItemButtonDelete","type","onClick","handleDelete","id","closeSymbol","connect","state","dispatch","ContactList","TransitionGroup","component","filter","filterArr","map","CSSTransition","key","timeout","unmountOnExit","classNames","listTransitionSlide","contacts","inputFilter","param","minLength","onChange","e","target","value","ContactForm","onSubmit","preventDefault","handleSubmitInput","contactForm","handleChangeName","maxLength","handleChangeNumber","addButton","in","length","listTransitionPop","params","Notify","notificationMessage","custom","customMessage","App","isOpen","this","setState","onNotification","setTimeout","showNotifications","transitions","cssForm","header","tr","Component","uuidv1","require","createReducer","payload","find","toLowerCase","alert","includes","persistConfig","storage","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c84f8d79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addButton\":\"ContactForm_addButton__2VsMS\",\"contactForm\":\"ContactForm_contactForm__3NZ7U\",\"header\":\"ContactForm_header__3PG2R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"contactItem_contactItem__15v1Z\",\"contactItemButtonDelete\":\"contactItem_contactItemButtonDelete__1koFT\",\"closeSymbol\":\"contactItem_closeSymbol__2k3WE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"listSlide_enter__2Ikox\",\"enterActive\":\"listSlide_enterActive__2RCTB\",\"exit\":\"listSlide_exit__3DYU5\",\"exitActive\":\"listSlide_exitActive__miXqL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom\":\"Notify_custom__1cF_M\",\"customMessage\":\"Notify_customMessage__31awg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"listPop_enter__2mIax\",\"enterActive\":\"listPop_enterActive__31R9j\",\"exit\":\"listPop_exit__IL1RM\",\"exitActive\":\"listPop_exitActive__1LR_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transitions_enter__188ru\",\"enterActive\":\"transitions_enterActive__isYXH\",\"exit\":\"transitions_exit__10wgj\",\"exitActive\":\"transitions_exitActive__1oyXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"tr_enter__GGXR6\",\"enterActive\":\"tr_enterActive__lPGv5\",\"exit\":\"tr_exit__3JMV3\",\"exitActive\":\"tr_exitActive__3_1Pa\"};","export default {\n  DELETE_CONTACT: \"DELETE_CONTACT\",\n  UPDATE_FILTER: \"UPDATE_FILTER\",\n  CHANGE_INPUT_NAME: \"CHANGE_INPUT_NAME\",\n  CHANGE_INPUT_NUMBER: \"CHANGE_INPUT_NUMBER\",\n  HANDLE_SUBMIT: \" HANDLE_SUBMIT\",\n  CHANGE_INPUT_FILTER: \"CHANGE_INPUT_FILTER\",\n  SHOW_NOTIFICATION: \"SHOW_NOTIFICATION\"\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nimport Types from \"./types\";\n\nexport const deleteContact = createAction(Types.DELETE_CONTACT);\n\nexport const updateFilter = createAction(Types.UPDATE_FILTER);\n\nexport const changeInputName = createAction(Types.CHANGE_INPUT_NAME);\n\nexport const changeInputNumber = createAction(Types.CHANGE_INPUT_NUMBER);\n\nexport const handleSubmit = createAction(Types.HANDLE_SUBMIT);\n\nexport const changeInputFilter = createAction(Types.CHANGE_INPUT_FILTER);\n\nexport const showNotification = createAction(Types.SHOW_NOTIFICATION);\n","import React from \"react\";\nimport css from \"./contactItem.module.css\";\n\nconst ContactItem = props => {\n  return (\n    <>\n      <div>\n        <li className={css.contactItem}>\n          <p>{props.el.name}:</p> <p>{props.el.number}</p>\n          <button\n            className={css.contactItemButtonDelete}\n            type=\"button\"\n            onClick={() => props.handleDelete(props.el.id)}\n          >\n            <span className={css.closeSymbol}>{`\\u2716`}</span>\n          </button>\n        </li>\n      </div>\n    </>\n  );\n};\n\nexport default ContactItem;\n","import { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/actions.js\";\nimport ContactItem from \"./ContactItem\";\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = dispatch => ({\n  handleDelete: id => {\n    dispatch(deleteContact(id));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ContactItem);\n","import React from \"react\";\nimport ContactItem from \"../contactItem/ContactItemContainer\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport listTransitionSlide from \"./listSlide.module.css\";\n\nconst ContactList = props => (\n  \n  <TransitionGroup component=\"ul\">\n     {props.filter !== \"\"\n      ? props.filterArr.map(el => (\n          <CSSTransition\n            key={el.id}\n            timeout={250}\n            unmountOnExit\n            classNames={listTransitionSlide}\n          >\n            <ContactItem key={el.id} el={el}/>\n          </CSSTransition>\n        ))\n      : props.contacts.map(el => (\n          <CSSTransition\n            key={el.id}\n            timeout={250}\n            unmountOnExit\n            classNames={listTransitionSlide}\n          >\n            <ContactItem key={el.id} el={el}/>\n          </CSSTransition>\n        )) } \n  </TransitionGroup>\n);\n\nexport default ContactList;\n","import { connect } from \"react-redux\";\nimport ContactList from \"./ContactList\";\nconst mapStateToProps = state => state;\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeInputFilter,  } from \"../../redux/actions\";\n\nconst Filter = props => (\n  <>\n  <input\n    minLength={5}\n    type=\"text\"\n    onChange={e => props.inputFilter(e.target.value)}\n  />\n\n  </>\n);\n\n\nconst mapDispatchToProps = dispatch => ({\n  inputFilter: param => {\n    dispatch(changeInputFilter(param));\n  }\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Filter);\n","import React from \"react\";\nimport ContactItem from \"../contactItem/ContactItemContainer\";\nimport ContactList from \"../contactList/ContactListContainer\";\nimport Filter from \"../filter/Filter\";\nimport css from \"./ContactForm.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport listTransitionPop from \"../contactList/listPop.module.css\";\n\nconst ContactForm = props => {\n  return (\n    <>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          props.handleSubmitInput();\n        }}\n      >\n        <div className={css.contactForm}>\n          <span>Name</span>\n          <input\n            minLength={5}\n            type=\"text\"\n            onChange={e => props.handleChangeName(e.target.value)}\n            value={props.name}\n          />\n          <span>Number</span>\n          <input\n            minLength={5}\n            maxLength={7}\n            type=\"number\"\n            onChange={e => props.handleChangeNumber(e.target.value)}\n            value={props.number}\n          />\n          <button className={css.addButton} type=\"submit\">\n            Add contact\n          </button>\n        </div>\n\n        <>\n          <CSSTransition\n            in={props.contacts.length >= 2}\n            timeout={250}\n            unmountOnExit\n            classNames={listTransitionPop}\n          >\n            <div className={css.contactForm}>\n              <h2>Find contacts by name</h2>\n\n              <Filter inputFilter={props.inputFilter} />\n            </div>\n          </CSSTransition>\n        </>\n\n        {props.contacts.length > 0 && (\n          <ContactList>\n            <ContactItem handleDelete={props.handleDelete}/>\n          </ContactList>\n        )}\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import { connect } from \"react-redux\";\nimport {\n  changeInputName,\n  changeInputNumber,\n  handleSubmit\n} from \"../../redux/actions.js\";\nimport ContactForm from \"./ContactForm\";\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = dispatch => ({\n  handleChangeName: params => {\n    dispatch(changeInputName(params));\n  },\n  handleChangeNumber: params => {\n    dispatch(changeInputNumber(params));\n  },\n  handleSubmitInput: () => {\n    dispatch(handleSubmit());\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ContactForm);\n","import React from \"react\";\nimport css from \"./Notify.module.css\";\n\nconst Notify = ({ notificationMessage }) => (\n  <div className={css.custom}>\n    <span className={css.customMessage}>{notificationMessage}</span>\n  </div>\n);\n\nexport default Notify;\n","import React, { Component } from \"react\";\nimport ContactForm from \"./contact-form/ContactFormContainer\";\nimport css from \"./App.module.css\";\nimport transitions from \"../transitions.module.css\";\nimport cssForm from \"./contact-form/ContactForm.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"pnotify/dist/es/PNotifyAnimate\";\nimport Notify from \"./notify/Notify\";\nimport tr from \"./notify/tr.module.css\";\n\nclass App extends Component {\n  state = {\n    isOpen: false\n  };\n\n  componentDidMount() {\n    this.setState({\n      isOpen: true\n    });\n\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    if (this.props.onNotification) {\n      setTimeout(() => {\n        this.props.showNotifications();\n      }, 1500);\n    }\n\n    return (\n      <>\n        <CSSTransition\n          in={isOpen}\n          timeout={500}\n          classNames={transitions}\n          unmountOnExit\n        >\n          <h2 className={cssForm.header}>Phonebook</h2>\n        </CSSTransition>\n\n        <ContactForm />\n        <CSSTransition\n          in={this.props.onNotification}\n          timeout={250}\n          classNames={tr}\n          unmountOnExit\n        >\n          <Notify notificationMessage={this.props.notificationMessage} />\n        </CSSTransition>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import { showNotification } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport App from \"./App\";\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = dispatch => ({\n  showNotifications: () => dispatch(showNotification())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport Types from \"./types\";\nconst uuidv1 = require(\"uuid/v1\");\n\nconst INT = {\n  contacts: [],\n  filterArr: [],\n  name: \"\",\n  number: \"\",\n  filter: \"\",\n  onNotification: false,\n  notificationMessage: \"\"\n};\n\nexport const contacts = createReducer(INT, {\n  [Types.DELETE_CONTACT]: (state, { payload }) => {\n    return {\n      ...state,\n      contacts: [...state.contacts.filter(el => el.id !== payload)],\n      filterArr: [...state.contacts.filter(el => el.id !== payload)]\n    };\n  },\n\n  [Types.UPDATE_FILTER]: (state, { payload }) => {\n    return [...state, payload];\n  },\n\n  [Types.CHANGE_INPUT_NAME]: (state, { payload }) => {\n    return { ...state, name: payload };\n  },\n\n  [Types.CHANGE_INPUT_NUMBER]: (state, { payload }) => {\n    return { ...state, number: payload };\n  },\n\n  [Types.HANDLE_SUBMIT]: (state, { payload }) => {\n    if (\n      state.contacts.find(\n        el => el.name.toLowerCase() === state.name.toLowerCase()\n      )\n    ) {\n      return {\n        ...state,\n        onNotification: true,\n        notificationMessage: `${state.name} already exists in your contact list!`,\n        name: \"\",\n        number: \"\"\n      };\n    } else {\n      if (state.name === \"\") {\n        alert(\"Please, enter a name!\");\n        return { ...state };\n      }\n\n      if (state.number === \"\") {\n        alert(\"Please, enter a phone number!\");\n        return { ...state };\n      }\n      if (state.number !== null && state.name !== null) {\n        return {\n          ...state,\n          contacts: [\n            ...state.contacts,\n            { name: state.name, number: state.number, id: uuidv1() }\n          ],\n          filterArr: [\n            ...state.filterArr,\n            { name: state.name, number: state.number, id: uuidv1() }\n          ],\n          name: \"\",\n          number: \"\"\n        };\n      }\n    }\n  },\n\n  [Types.CHANGE_INPUT_FILTER]: (state, { payload }) => {\n    return {\n      ...state,\n      filter: payload,\n      filterArr: [...state.contacts.filter(el => el.name.includes(payload))]\n    };\n  },\n\n  [Types.SHOW_NOTIFICATION]: (state, { payload }) => {\n    return { ...state, onNotification: false };\n  }\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { contacts } from \"./contactReducers\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"contacts\"]\n};\n\nconst persistedReducer = persistReducer(persistConfig, contacts);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/AppContainer\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}